name: Java CI

on:
  push:
    paths:
      - src/**
      - .github/**
      - build.gradle.kts
      - settings.gradle.kts
    tags:
      - '**'
    branches:
      - 'develop'
      - 'master'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Log into Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Log into GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: 8.13

      - name: Set execute permissions for gradlew
        run: chmod +x ./gradlew

      - name: Set Lowercase Owner Name
        run: |
          echo "OWNER_LC=${OWNER,,}" >>${GITHUB_ENV}
        env:
          OWNER: '${{ github.repository_owner }}'

      - name: Extract project version
        id: get_version
        run: |
          VERSION=$(./gradlew properties -q | grep "^version:" | awk '{print $2}')
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Extracted version: $VERSION"

      - name: Cache Jib build output
        uses: actions/cache@v2
        id: cache
        with:
          path: ~/.cache/jib
          key: ${{ runner.os }}-jib-${{ hashFiles('build.gradle') }}

      - name: Build and Push Docker Image
        run: |
          if [[ "${GITHUB_REF}" == refs/pull/*/merge ]]; then
            PR_NUMBER=$(echo "${GITHUB_REF}" | sed -E 's#refs/pull/([0-9]+)/merge#\1#')
        
            ./gradlew jib \
              -Djib.cache.directory=~/.cache/jib \
              -Djib.to.image=ghcr.io/${OWNER_LC}/tosho-ddl:pr-${PR_NUMBER}
        
            ./gradlew jib \
              -Djib.cache.directory=~/.cache/jib \
              -Djib.to.image=docker.io/${DOCKERHUB_USERNAME}/tosho-ddl:pr-${PR_NUMBER}
          
          elif [[ "${GITHUB_REF_NAME}" == "develop" ]]; then
            ./gradlew jib \
              -Djib.cache.directory=~/.cache/jib \
              -Djib.to.image=ghcr.io/${OWNER_LC}/tosho-ddl:develop
        
            ./gradlew jib \
              -Djib.cache.directory=~/.cache/jib \
              -Djib.to.image=docker.io/${DOCKERHUB_USERNAME}/tosho-ddl:develop
          
          elif [[ "${GITHUB_REF_NAME}" == "master" ]]; then
            ./gradlew jib \
              -Djib.cache.directory=~/.cache/jib \
              -Djib.to.image=ghcr.io/${OWNER_LC}/tosho-ddl \
              -Djib.to.tags=${VERSION},latest
        
            ./gradlew jib \
              -Djib.cache.directory=~/.cache/jib \
              -Djib.to.image=docker.io/${DOCKERHUB_USERNAME}/tosho-ddl \
              -Djib.to.tags=${VERSION},latest
          fi
        env:
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
